{"version":3,"sources":["../scripts.babel/background.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;IAEP,WAAW;AACf,WADI,WAAW,CACH,GAAG,EAAE,OAAO,EAAE;0BADtB,WAAW;;;AAGb,QAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AACxB,QAAI,CAAC,MAAM,GAAG,EAAE,CAAC,OAAO,CAAC,wBAAwB,CAAC;;;;;AAAC,AAKnD,QAAI,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;AAChD,QAAI,CAAC,MAAM,CAAC,EAAE,CAAC,eAAe,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;AACrD,QAAI,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;GACjD;;eAZG,WAAW;;iCAcF,GAAG,EAAC,EAEhB;;;iCAEY,GAAG,EAAC,EAEhB;;;gCAEW,IAAI,EAAC;AACf,aAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAC7B,UAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC;;AAAC,KAEpC;;;mCAGc,IAAI,EAAC;AAClB,YAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAC,EAAE,UAAS,GAAG,EAAC;;AAE/C,YAAI,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC;AACrB,gBAAM,EAAE,aAAa;SACtB,EAAE,IAAI,CAAC,CAAA;AACR,eAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,OAAO,CAAC,CAAC;AACxD,YAAI,OAAO,CAAC,OAAO,EAAC;AAClB,gBAAM,CAAC,UAAU,CAAC,YAAW;AACvB,kBAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,EAAE,UAAS,QAAQ,EAAC;AACzD,qBAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;aAC9B,CAAC,CAAC;WACL,EAAE,IAAI,CAAC,CAAC;SAEb;OACF,CAAC,CAAC;KACJ;;;SA7CG,WAAW;;;AAiDjB,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,UAAA,OAAO,EAAI;AAChD,SAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,OAAO,CAAC,eAAe,CAAC,CAAC;CACzD,CAAC,CAAC;;AAEH,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAC,CAAC,CAAC;;AAEpD,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC;;;;;;AAAC,AAM5D,IAAI,WAAW,GAAG,IAAI,WAAW,EAAE;;;;;;AAAC,AAMpC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAClC,UAAS,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE;AACtC,MAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAC;AAC/B,WAAO,CAAC,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC7C,eAAW,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACtC,gBAAY,CAAC,EAAC,MAAM,EAAE,UAAU,EAAC,CAAC,CAAC;GACpC;CACF,CAAC,CAAC","file":"background.js","sourcesContent":["'use strict';\n\nclass BeamHandler{\n  constructor(url, options) {\n    //Load settings\n    this.settings = options;\n    this.socket = io.connect('http://localhost:3000/'); //replace with url later\n    /**\n    * Socket.io listeners\n    * Handle messages received from socket server\n    */\n    this.socket.on('connection', this.onConnection);\n    this.socket.on('incoming beam', this.onIncomingBeam);\n    this.socket.on('disconnect', this.onDisconnect);\n  }\n  \n  onConnection(msg){\n\n  }\n  \n  onDisconnect(msg){\n    \n  }\n  \n  sendBeamTab(data){\n    console.log(\"beaming\", data);\n    this.socket.emit('beam tab', data);\n    //TODO handle success from server, etc\n  }\n\n  \n  onIncomingBeam(data){\n    chrome.tabs.create({url: data.url}, function(tab){\n      // Now in the context of the (new) beamed tab. \n      var message = _.extend({\n        action: \"showMessage\"\n      }, data)\n      console.log(\"Message sent to content script:\", message);\n      if (message.message){\n        window.setTimeout(function() { \n              chrome.tabs.sendMessage(tab.id, message, function(response){\n                console.log(response.status);\n              }); \n           }, 2000);\n\n      }\n    });\n  }\n}\n\n\nchrome.runtime.onInstalled.addListener(details => {\n  console.log('previousVersion', details.previousVersion);\n});\n\nchrome.browserAction.setBadgeText({text: '\\'Allo'});\n\nconsole.log('\\'Allo \\'Allo! Event Page for Browser Action');\n\n/**\n * Instantiate beamHandler to handle socket connections\n */\n\nlet beamHandler = new BeamHandler();\n\n/**\n * Chrome runtime listeners\n * Messages sent from other parts of the extension will be received here\n */\nchrome.runtime.onMessage.addListener(\n  function(request, sender, sendResponse) {\n    if (request.action === 'beamTab'){\n      console.log('beaming tab', request.data.url);\n      beamHandler.sendBeamTab(request.data);\n      sendResponse({status: 'received'});\n    }\n  });"]}